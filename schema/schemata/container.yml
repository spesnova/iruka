---
"$schema": http://json-schema.org/draft-04/hyper-schema
title: Container
description: Container encapsulate running processes of an app on iruka.
stability: prototype
strictProperties: true
type:
- object
definitions:
  identity:
    anyOf:
    - "$ref": "/schemata/container#/definitions/id"
    - "$ref": "/schemata/container#/definitions/name"
  id:
    description: unique identifier of container
    example: 01234567-89ab-cdef-0123-456789abcdef
    readOnly: true
    format: uuid
    type:
    - string
  app_id:
    description: unique identifier of app the container is belong to
    example: 01234567-89ab-cdef-0123-456789abcdef
    readOnly: true
    format: uuid
    type:
    - string
  name:
    description: unique name of container
    example: example.web.1
    readOnly: true
    type:
    - string
  image:
    description: resource URI of the Docker image (including tag) of the container
    example: quay.io/spesnova/example:latest
    readOnly: false
    type:
    - string
  size:
    description: container size (default “1X”)
    example: 2X
    readOnly: false
    type:
    - string
  command:
    description: command used to start this process
    example: bundle exec rails server
    readOnly: false
    type:
    - string
  port:
    description: expose port
    example: 80
    readOnly: false
    type:
    - integer
  type:
    description: type of process (either "web", "worker", "timer", or "run")
    example: web
    readOnly: false
    type:
    - string
  desired_state:
    description: desired state of process (either exited or up)
    example: up
    readOnly: false
    type:
    - string
  state:
    description: current state of process (either exited or up)
    example: up
    readOnly: true
    type:
    - string
  machine:
    description: where this container is running
    example: 172.17.8.102
    readOnly: true
    type:
    - string
  published_port:
    description: published port
    example: 49153
    readOnly: true
    type:
    - integer
  created_at:
    description: when container was created
    example: '2012-01-01T12:00:00Z'
    format: date-time
    type:
    - string
  updated_at:
    description: when container was updated
    example: '2012-01-01T12:00:00Z'
    format: date-time
    type:
    - string
links:
- description: Create and run a new container.
  href: "/apps/{(%2Fschemata%2Fapp%23%2Fdefinitions%2Fidentity)}/containers"
  method: POST
  rel: create
  schema:
    properties: {
      "image": {
        "$ref": "/schemata/container#/definitions/image"
      },
      "size": {
        "$ref": "/schemata/container#/definitions/size"
      },
      "command": {
        "$ref": "/schemata/container#/definitions/command"
      },
      "type": {
        "$ref": "/schemata/container#/definitions/type"
      },
      "port": {
        "$ref": "/schemata/container#/definitions/port"
      }
    }
    type:
    - object
  title: Create
- description: Delete an existing container.
  href: "/apps/{(%2Fschemata%2Fapp%23%2Fdefinitions%2Fidentity)}/containers/{(%2Fschemata%2Fcontainer%23%2Fdefinitions%2Fidentity)}"
  method: DELETE
  rel: destroy
  title: Delete
- description: Info for existing container.
  href: "/apps/{(%2Fschemata%2Fapp%23%2Fdefinitions%2Fidentity)}/containers/{(%2Fschemata%2Fcontainer%23%2Fdefinitions%2Fidentity)}"
  method: GET
  rel: self
  title: Info
- description: List existing containers.
  href: "/apps/{(%2Fschemata%2Fapp%23%2Fdefinitions%2Fidentity)}/containers"
  method: GET
  rel: instances
  title: List
- description: Update options and restart an existing container.
  href: "/apps/{(%2Fschemata%2Fapp%23%2Fdefinitions%2Fidentity)}/containers/{(%2Fschemata%2Fcontainer%23%2Fdefinitions%2Fidentity)}"
  method: PATCH
  rel: update
  schema:
    properties: {
      "image": {
        "$ref": "/schemata/container#/definitions/image"
      },
      "size": {
        "$ref": "/schemata/container#/definitions/size"
      },
      "command": {
        "$ref": "/schemata/container#/definitions/command"
      },
      "type": {
        "$ref": "/schemata/container#/definitions/type"
      },
      "port": {
        "$ref": "/schemata/container#/definitions/port"
      }
    }
    type:
    - object
  title: Update
properties:
  id:
    "$ref": "/schemata/container#/definitions/id"
  app_id:
    "$ref": "/schemata/container#/definitions/app_id"
  name:
    "$ref": "/schemata/container#/definitions/name"
  image:
    "$ref": "/schemata/container#/definitions/image"
  size:
    "$ref": "/schemata/container#/definitions/size"
  command:
    "$ref": "/schemata/container#/definitions/command"
  port:
    "$ref": "/schemata/container#/definitions/port"
  type:
    "$ref": "/schemata/container#/definitions/type"
  desired_state:
    "$ref": "/schemata/container#/definitions/desired_state"
  state:
    "$ref": "/schemata/container#/definitions/state"
  machine:
    "$ref": "/schemata/container#/definitions/machine"
  published_port:
    "$ref": "/schemata/container#/definitions/published_port"
  created_at:
    "$ref": "/schemata/container#/definitions/created_at"
  updated_at:
    "$ref": "/schemata/container#/definitions/updated_at"
id: schemata/container
